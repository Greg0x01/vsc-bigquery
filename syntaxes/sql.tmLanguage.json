{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "BigQuery",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#logical_operators"
		},
		{
			"include": "#comparison_operators"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"begin": "(^[ \\t]+)?(?=--)",
					"end": "(?!\\G)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.sql"
						}
					},
					"patterns": [
						{
							"begin": "--",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.sql"
								}
							},
							"end": "\\n",
							"name": "comment.line.double-dash.sql"
						}
					]
				}
			]
		},
		"function_names": {
			"patterns": [

			]
		},
		"keywords": {
			"patterns": [
				{
					"match": "(?i:\\b(create (or replace )?table( if not exists)?|partition by|cluster by|options|delete|update|merge|insert|with|select|from|where|having|group by|window|as|(inner|cross|(full|left|right)( outer)? )?join|unnest|using|on|union( (all|distinct))?|(intersect|except)( distinct)?)\\b)",
					"captures": {
						"1": {
							"name": "keyword.control.sql"
						}
					}
				}
			]
		},
		"logical_operators": {
			"patterns": [
				{
					"match": "(?i:\\b(not|and|or)\\b)",
					"captures": {
						"1": {
							"name": "keyword.operator.sql"
						}
					}
				}
			]
		},
		"comparison_operators": {
			"patterns": [
				{
					"match": "(?i:\\b(<|<=|>|>=|=|!=|<>)\\b)",
					"captures": {
						"1": {
							"name": "keyword.operator.sql"
						}
					}
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.single.sql",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.sql",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.double.sql",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.sql",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.other.sql",
					"begin": "`",
					"end": "`",
					"patterns": [
						{
							"name": "constant.character.escape.sql",
							"match": "\\\\."
						}
					]
				}
			]
		}
	},
	"scopeName": "source.bigquery"
}